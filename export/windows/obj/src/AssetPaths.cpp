// Generated by Haxe 4.1.5
#include <hxcpp.h>

#ifndef INCLUDED_AssetPaths
#include <AssetPaths.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_814219dbbef64044_8_font,"AssetPaths","font",0x8212fcff,"AssetPaths.font","AssetPaths.hx",8,0xc62bce40)
HX_LOCAL_STACK_FRAME(_hx_pos_814219dbbef64044_13_image,"AssetPaths","image",0x0761ca2b,"AssetPaths.image","AssetPaths.hx",13,0xc62bce40)
HX_LOCAL_STACK_FRAME(_hx_pos_814219dbbef64044_18_ogmo,"AssetPaths","ogmo",0x87ffd5aa,"AssetPaths.ogmo","AssetPaths.hx",18,0xc62bce40)
HX_LOCAL_STACK_FRAME(_hx_pos_814219dbbef64044_23_json,"AssetPaths","json",0x84bae158,"AssetPaths.json","AssetPaths.hx",23,0xc62bce40)

void AssetPaths_obj::__construct() { }

Dynamic AssetPaths_obj::__CreateEmpty() { return new AssetPaths_obj; }

void *AssetPaths_obj::_hx_vtable = 0;

Dynamic AssetPaths_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< AssetPaths_obj > _hx_result = new AssetPaths_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool AssetPaths_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x78a931fe;
}

::String AssetPaths_obj::font(::String key){
            	HX_STACKFRAME(&_hx_pos_814219dbbef64044_8_font)
HXDLIN(   8)		return ((HX_("assets/fonts/",37,ff,a5,9c) + key) + HX_(".ttf",78,3b,c0,1e));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetPaths_obj,font,return )

::String AssetPaths_obj::image(::String key){
            	HX_STACKFRAME(&_hx_pos_814219dbbef64044_13_image)
HXDLIN(  13)		return ((HX_("assets/images/",ab,47,cb,9f) + key) + HX_(".png",3b,2d,bd,1e));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetPaths_obj,image,return )

::String AssetPaths_obj::ogmo(::String key){
            	HX_STACKFRAME(&_hx_pos_814219dbbef64044_18_ogmo)
HXDLIN(  18)		return ((HX_("assets/data/",f9,10,73,a0) + key) + HX_(".ogmo",a8,e5,1b,c6));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetPaths_obj,ogmo,return )

::String AssetPaths_obj::json(::String key){
            	HX_STACKFRAME(&_hx_pos_814219dbbef64044_23_json)
HXDLIN(  23)		return ((HX_("assets/data/",f9,10,73,a0) + key) + HX_(".json",56,f1,d6,c2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(AssetPaths_obj,json,return )


AssetPaths_obj::AssetPaths_obj()
{
}

bool AssetPaths_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { outValue = font_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ogmo") ) { outValue = ogmo_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"json") ) { outValue = json_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"image") ) { outValue = image_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *AssetPaths_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *AssetPaths_obj_sStaticStorageInfo = 0;
#endif

::hx::Class AssetPaths_obj::__mClass;

static ::String AssetPaths_obj_sStaticFields[] = {
	HX_("font",cf,5d,c0,43),
	HX_("image",5b,1f,69,bd),
	HX_("ogmo",7a,36,ad,49),
	HX_("json",28,42,68,46),
	::String(null())
};

void AssetPaths_obj::__register()
{
	AssetPaths_obj _hx_dummy;
	AssetPaths_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("AssetPaths",3e,0f,e6,60);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &AssetPaths_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(AssetPaths_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< AssetPaths_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = AssetPaths_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = AssetPaths_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

